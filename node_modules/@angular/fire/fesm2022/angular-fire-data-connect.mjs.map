{"version":3,"file":"angular-fire-data-connect.mjs","sources":["../../../src/data-connect/data-connect.ts","../../../src/data-connect/data-connect.module.ts","../../../src/data-connect/firebase.ts","../../../src/data-connect/angular-fire-data-connect.ts"],"sourcesContent":["import { ɵgetAllInstancesOf } from '@angular/fire';\nimport { DataConnect } from 'firebase/data-connect';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\n\nexport { DataConnect };\n\nexport const DATA_CONNECT_PROVIDER_NAME = 'data-connect';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DataConnectInstances extends Array<DataConnect> {}\n\nexport class DataConnectInstances {\n  constructor() {\n    return ɵgetAllInstancesOf<DataConnect>(DATA_CONNECT_PROVIDER_NAME);\n  }\n}\n\nexport const dataConnectInstance$ = timer(0, 300).pipe(\n  concatMap(() => from(ɵgetAllInstancesOf<DataConnect>(DATA_CONNECT_PROVIDER_NAME))),\n  distinct(),\n);\n","import {\n  EnvironmentProviders,\n  InjectionToken,\n  Injector,\n  NgModule,\n  NgZone,\n  Optional,\n  makeEnvironmentProviders,\n} from '@angular/core';\nimport { VERSION, ɵAngularFireSchedulers, ɵgetDefaultInstanceOf } from '@angular/fire';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { DATA_CONNECT_PROVIDER_NAME, DataConnect, DataConnectInstances } from './data-connect';\n\nconst PROVIDED_DATA_CONNECT_INSTANCES = new InjectionToken<DataConnect[]>('angularfire2.data-connect-instances');\n\nexport function defaultDataConnectInstanceFactory(provided: DataConnect[]|undefined, defaultApp: FirebaseApp) {\n  return ɵgetDefaultInstanceOf<DataConnect>(DATA_CONNECT_PROVIDER_NAME, provided, defaultApp);\n}\n\nexport function dataConnectInstanceFactory(fn: (injector: Injector) => DataConnect) {\n  return (zone: NgZone, injector: Injector) => {\n    return zone.runOutsideAngular(() => fn(injector));\n  };\n}\n\nconst DATA_CONNECT_INSTANCES_PROVIDER = {\n  provide: DataConnectInstances,\n  deps: [\n    [new Optional(), PROVIDED_DATA_CONNECT_INSTANCES ],\n  ]\n};\n\nconst DEFAULT_DATA_CONNECT_INSTANCE_PROVIDER = {\n  provide: DataConnect,\n  useFactory: defaultDataConnectInstanceFactory,\n  deps: [\n    [new Optional(), PROVIDED_DATA_CONNECT_INSTANCES ],\n    FirebaseApp,\n  ]\n};\n\n@NgModule({\n  providers: [\n    DEFAULT_DATA_CONNECT_INSTANCE_PROVIDER,\n    DATA_CONNECT_INSTANCES_PROVIDER,\n  ]\n})\nexport class DataConnectModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fdc');\n  }\n}\n\nexport function provideDataConnect(fn: (injector: Injector) => DataConnect, ...deps: any[]): EnvironmentProviders {\n  registerVersion('angularfire', VERSION.full, 'fdc');\n\n  return makeEnvironmentProviders([\n    DEFAULT_DATA_CONNECT_INSTANCE_PROVIDER,\n    DATA_CONNECT_INSTANCES_PROVIDER,\n    {\n      provide: PROVIDED_DATA_CONNECT_INSTANCES,\n      useFactory: dataConnectInstanceFactory(fn),\n      multi: true,\n      deps: [\n        NgZone,\n        Injector,\n        ɵAngularFireSchedulers,\n        FirebaseApps,\n        ...deps,\n      ],\n    }\n  ]);\n}\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nexport * from 'firebase/data-connect';\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  connectDataConnectEmulator as _connectDataConnectEmulator,\n  executeMutation as _executeMutation,\n  executeQuery as _executeQuery,\n  getDataConnect as _getDataConnect,\n  mutationRef as _mutationRef,\n  queryRef as _queryRef,\n  setLogLevel as _setLogLevel,\n  subscribe as _subscribe,\n  terminate as _terminate,\n  toQueryRef as _toQueryRef\n} from 'firebase/data-connect';\n\nexport const connectDataConnectEmulator = ɵzoneWrap(_connectDataConnectEmulator, true);\nexport const executeMutation = ɵzoneWrap(_executeMutation, true);\nexport const executeQuery = ɵzoneWrap(_executeQuery, true);\nexport const getDataConnect = ɵzoneWrap(_getDataConnect, true);\nexport const mutationRef = ɵzoneWrap(_mutationRef, true, 2);\nexport const queryRef = ɵzoneWrap(_queryRef, true, 2);\nexport const setLogLevel = ɵzoneWrap(_setLogLevel, true);\nexport const subscribe = ɵzoneWrap(_subscribe, true);\nexport const terminate = ɵzoneWrap(_terminate, true);\nexport const toQueryRef = ɵzoneWrap(_toQueryRef, true, 2);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","ɵAngularFireSchedulers","ɵzoneWrap","_connectDataConnectEmulator","_executeMutation","_executeQuery","_getDataConnect","_mutationRef","_queryRef","_setLogLevel","_subscribe","_terminate","_toQueryRef"],"mappings":"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"}